name: Release

on:
  push:
    branches: ["main"]
    tags: ["v**"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64-musl
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            bins: "host_exposer_client host_exposer_server"
          - release_for: Linux-aarch64-musl
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            bins: "host_exposer_client host_exposer_server"
          - release_for: Linux-x86_64-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bins: "host_exposer_client host_exposer_server"
          - release_for: Linux-aarch64-gnu
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bins: "host_exposer_client host_exposer_server"
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bins: "host_exposer_client.exe host_exposer_server.exe"
          - release_for: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bins: "host_exposer_client.exe host_exposer_server.exe"
          - release_for: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bins: "host_exposer_client host_exposer_server"
          - release_for: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            bins: "host_exposer_client host_exposer_server"

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Server Frontend dependencies (with cache)
        uses: jjs98/pnpm-install-action@v6
        with:
          directory: server/frontend

      - name: Build Server Frontend
        shell: bash
        working-directory: server/frontend
        run: pnpm build

      - name: Setup Musl Tools
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: musl-tools
          version: 1.0
        if: endsWith(matrix.platform.target, 'musl')

      - name: Setup Rustup toolchain
        run: rustup toolchain install stable --profile minimal --target ${{ matrix.platform.target }} --no-self-update

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build binaries
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.platform.target }}
          strip: true
          args: "--release --locked --bins"

      - name: Package binaries as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          for bin in ${{ matrix.platform.bins }}; do
            if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
              7z a ../../../$bin-${{ matrix.platform.release_for }}.zip $bin
            else
              tar czvf ../../../$bin-${{ matrix.platform.release_for }}.tar.gz $bin
            fi
          done
          cd ../../..

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "host_exposer_*"
          token: ${{ secrets.RELEASE_TOKEN }}
